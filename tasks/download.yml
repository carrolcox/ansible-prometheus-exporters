---
- name: exporters | download | Check installed
  stat:
    path: "{{ item.bin_dir | d(exporters_bin_dir) }}/{{ item.name }}"
  changed_when: no
  register: current_exporter_binary

- name: exporters | download | Check version
  shell: |
    sudo -Hu nobody timeout 2 {{ item.bin_dir | d(exporters_bin_dir) }}/{{ item.name }} --version 2>&1 | grep -iE {{ item.name }} | grep -Eoi '([0-9]{1,}\.){1,3}[0-9]{1,}(|-[a-z0-9\.]{1,})' | sort -uV | head -1
  args:
    executable: /bin/bash
  register: current_exporter_binary_version
  changed_when: no
  when:
    - current_exporter_binary.stat.exists

- name: exporters | download | Create tmp directory
  file:
    path: "{{ exporters_tmp_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - not current_exporter_binary.stat.exists or current_exporter_binary_version.stdout is version(item.version, '!=')

- name: exporters | download | url w/o package name
  set_fact:
    current_exporter_download_url: "{{ item.repo }}/releases/download/v{{ item.version }}/{{ item.name }}-{{ item.version }}.{{ item.platform }}.tar.gz"
  when:
    - item.package is not defined
    - not current_exporter_binary.stat.exists or current_exporter_binary_version.stdout is version(item.version, '!=')

- name: exporters | download | url with package name
  set_fact:
    current_exporter_download_url: "{{ item.repo }}/releases/download/v{{ item.version }}/{{ item.package }}.tar.gz"
  when:
    - item.package is defined
    - not current_exporter_binary.stat.exists or (current_exporter_binary_version.stdout and current_exporter_binary_version.stdout is version(item.version, '<'))

- name: exporters | download | downloaded binary w/o package name
  set_fact:
    current_exporter_download_binary: "{{ item.name }}-{{ item.version }}.{{ item.platform }}/{{ item.name }}"
  when:
    - item.package is not defined
    - item.single is not defined or not item.single | bool
    - not current_exporter_binary.stat.exists or current_exporter_binary_version.stdout is version(item.version, '!=')

- name: exporters | download | downloaded binary with package name
  set_fact:
    current_exporter_download_binary: "{{ item.package }}/{{ item.name }}"
  when:
    - item.package is defined
    - item.single is not defined or not item.single | bool
    - not current_exporter_binary.stat.exists or current_exporter_binary_version.stdout is version(item.version, '!=')

- name: exporters | download | downloaded binary w/o package name and single file
  set_fact:
    current_exporter_download_binary: "{{ item.name }}"
  when:
    - item.package is not defined
    - item.single is defined and item.single | bool
    - not current_exporter_binary.stat.exists or current_exporter_binary_version.stdout is version(item.version, '!=')

- name: exporters | download | downloaded binary with package name and single file
  set_fact:
    current_exporter_download_binary: "{{ item.name }}"
  when:
    - item.package is defined
    - item.single is defined and item.single | bool
    - not current_exporter_binary.stat.exists or current_exporter_binary_version.stdout is version(item.version, '!=')

- name: exporters | download | Get exporter
  unarchive:
    src: "{{ current_exporter_download_url }}"
    dest: "{{ exporters_tmp_dir }}/"
    remote_src: yes
    owner: root
  register: current_exporter_download
  when:
    - current_exporter_download_url is defined

- name: exporters | download | Copy to bin_dir and restart
  copy:
    src: "{{ exporters_tmp_dir }}/{{ current_exporter_download_binary }}"
    dest: "{{ item.bin_dir | d(exporters_bin_dir) }}/{{ item.name }}"
    remote_src: yes
    force: yes
    owner: root
    group: adm
    mode: 0755
  when:
    - current_exporter_download_binary is defined
    - current_exporter_download_binary | length > 0
    - current_exporter_download.changed
    - current_exporter_download.extract_results.rc == 0
  notify:
    - restart exporters

- name: exporters | download | clean facts
  set_fact:
    current_exporter_url: ""
    current_exporter_download_binary: ""
